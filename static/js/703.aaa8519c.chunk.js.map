{"version":3,"file":"static/js/703.aaa8519c.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","fetchMovies.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = styled.ol`\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n  font-size: 22px;\n`;\n\nexport const MovieItem = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    color: #3f51b5;\n  }\n  &.active {\n    color: #3f51b5;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieItem, MovieList } from './MovieGallery.styled';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  const renderGallery = () =>\n    movies.map(({ id, title }) => (\n      <li key={id}>\n        <MovieItem\n          to={`/movies/${id}`}\n          state={{ from: `${location.pathname}${location.search}` }}\n        >\n          {title}\n        </MovieItem>\n      </li>\n    ));\n\n  return <MovieList>{movies ? renderGallery() : null}</MovieList>;\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '19cb12c7db03612dca0520f8299f982f';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { HiSearch } from 'react-icons/hi';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\n\nexport function SearchBar({ onSubmit }) {\n  const [inputName, setInputName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputName.trim() === '') {\n      return () => alert('Searchign form is empty! Please input some text.');\n    }\n    onSubmit(inputName);\n    setInputName('');\n  };\n\n  const handleChange = e => {\n    setInputName(e.target.value.toLowerCase());\n  };\n\n  return (\n    <SearchBarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <HiSearch style={{ width: 30, height: 30 }} />\n          <SearchFormLabel>Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies...\"\n          onChange={handleChange}\n          name=\"inputName\"\n          value={inputName}\n        />\n      </SearchForm>\n    </SearchBarHeader>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchSearchMovie } from '../../fetchMovies';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('name') ?? '';\n\n  const onSubmit = value => {\n    setSearchParams({ name: `${value}` });\n  };\n\n  useEffect(() => {\n    const searchFilm = async movieName => {\n      setIsLoading(true);\n      try {\n        const response = await fetchSearchMovie(movieName);\n        setMovies(response.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieName !== '') {\n      searchFilm(movieName);\n    }\n  }, [movieName]);\n\n  return (\n    <>\n      {error && alert(`Sorry, but something happened wrong: ${error.message}`)}\n      <SearchBar onSubmit={onSubmit} />\n      <MovieGallery movies={movies} />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","styled","MovieItem","NavLink","MovieGallery","movies","location","useLocation","map","id","title","to","state","from","pathname","search","BASE_URL","KEY","fetchTrending","axios","response","data","fetchSearchMovie","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","SearchBarHeader","SearchForm","SearchFormButton","SearchFormLabel","SearchFormInput","SearchBar","onSubmit","useState","inputName","setInputName","e","preventDefault","trim","alert","type","style","width","height","autocomplete","autoFocus","placeholder","onChange","target","value","toLowerCase","name","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","isLoading","setIsLoading","movieName","get","useEffect","searchFilm","results","message","Loader"],"sourceRoot":""}